#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom.Models.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataLinhKien")]
	public partial class Data_Linh_KienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHI_TIET_DON_HANG(CHI_TIET_DON_HANG instance);
    partial void UpdateCHI_TIET_DON_HANG(CHI_TIET_DON_HANG instance);
    partial void DeleteCHI_TIET_DON_HANG(CHI_TIET_DON_HANG instance);
    partial void InsertTHONG_TIN_TAI_KHOAN(THONG_TIN_TAI_KHOAN instance);
    partial void UpdateTHONG_TIN_TAI_KHOAN(THONG_TIN_TAI_KHOAN instance);
    partial void DeleteTHONG_TIN_TAI_KHOAN(THONG_TIN_TAI_KHOAN instance);
    partial void InsertCHI_TIET_SAN_PHAM(CHI_TIET_SAN_PHAM instance);
    partial void UpdateCHI_TIET_SAN_PHAM(CHI_TIET_SAN_PHAM instance);
    partial void DeleteCHI_TIET_SAN_PHAM(CHI_TIET_SAN_PHAM instance);
    partial void InsertDON_HANG(DON_HANG instance);
    partial void UpdateDON_HANG(DON_HANG instance);
    partial void DeleteDON_HANG(DON_HANG instance);
    partial void InsertGIO_HANG(GIO_HANG instance);
    partial void UpdateGIO_HANG(GIO_HANG instance);
    partial void DeleteGIO_HANG(GIO_HANG instance);
    partial void InsertHINH_ANH(HINH_ANH instance);
    partial void UpdateHINH_ANH(HINH_ANH instance);
    partial void DeleteHINH_ANH(HINH_ANH instance);
    partial void InsertLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void UpdateLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void DeleteLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void InsertSAN_PHAM(SAN_PHAM instance);
    partial void UpdateSAN_PHAM(SAN_PHAM instance);
    partial void DeleteSAN_PHAM(SAN_PHAM instance);
    partial void InsertTAI_KHOAN(TAI_KHOAN instance);
    partial void UpdateTAI_KHOAN(TAI_KHOAN instance);
    partial void DeleteTAI_KHOAN(TAI_KHOAN instance);
    partial void InsertTHONG_TIN_DON_HANG(THONG_TIN_DON_HANG instance);
    partial void UpdateTHONG_TIN_DON_HANG(THONG_TIN_DON_HANG instance);
    partial void DeleteTHONG_TIN_DON_HANG(THONG_TIN_DON_HANG instance);
    #endregion
		
		public Data_Linh_KienDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataLinhKienConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Data_Linh_KienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data_Linh_KienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data_Linh_KienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data_Linh_KienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHI_TIET_DON_HANG> CHI_TIET_DON_HANGs
		{
			get
			{
				return this.GetTable<CHI_TIET_DON_HANG>();
			}
		}
		
		public System.Data.Linq.Table<THONG_TIN_TAI_KHOAN> THONG_TIN_TAI_KHOANs
		{
			get
			{
				return this.GetTable<THONG_TIN_TAI_KHOAN>();
			}
		}
		
		public System.Data.Linq.Table<CHI_TIET_SAN_PHAM> CHI_TIET_SAN_PHAMs
		{
			get
			{
				return this.GetTable<CHI_TIET_SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<DON_HANG> DON_HANGs
		{
			get
			{
				return this.GetTable<DON_HANG>();
			}
		}
		
		public System.Data.Linq.Table<GIO_HANG> GIO_HANGs
		{
			get
			{
				return this.GetTable<GIO_HANG>();
			}
		}
		
		public System.Data.Linq.Table<HINH_ANH> HINH_ANHs
		{
			get
			{
				return this.GetTable<HINH_ANH>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_SAN_PHAM> LOAI_SAN_PHAMs
		{
			get
			{
				return this.GetTable<LOAI_SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this.GetTable<SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<TAI_KHOAN> TAI_KHOANs
		{
			get
			{
				return this.GetTable<TAI_KHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THONG_TIN_DON_HANG> THONG_TIN_DON_HANGs
		{
			get
			{
				return this.GetTable<THONG_TIN_DON_HANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHI_TIET_DON_HANG")]
	public partial class CHI_TIET_DON_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _DON_HANG_ID;
		
		private System.Nullable<long> _SAN_PHAM_ID;
		
		private System.Nullable<decimal> _GIA;
		
		private string _MAU;
		
		private System.Nullable<int> _SO_LUONG;
		
		private string _TEN_SAN_PHAM;
		
		private string _HINH_ANH;
		
		private EntityRef<DON_HANG> _DON_HANG;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDON_HANG_IDChanging(System.Nullable<long> value);
    partial void OnDON_HANG_IDChanged();
    partial void OnSAN_PHAM_IDChanging(System.Nullable<long> value);
    partial void OnSAN_PHAM_IDChanged();
    partial void OnGIAChanging(System.Nullable<decimal> value);
    partial void OnGIAChanged();
    partial void OnMAUChanging(string value);
    partial void OnMAUChanged();
    partial void OnSO_LUONGChanging(System.Nullable<int> value);
    partial void OnSO_LUONGChanged();
    partial void OnTEN_SAN_PHAMChanging(string value);
    partial void OnTEN_SAN_PHAMChanged();
    partial void OnHINH_ANHChanging(string value);
    partial void OnHINH_ANHChanged();
    #endregion
		
		public CHI_TIET_DON_HANG()
		{
			this._DON_HANG = default(EntityRef<DON_HANG>);
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DON_HANG_ID", DbType="BigInt")]
		public System.Nullable<long> DON_HANG_ID
		{
			get
			{
				return this._DON_HANG_ID;
			}
			set
			{
				if ((this._DON_HANG_ID != value))
				{
					if (this._DON_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDON_HANG_IDChanging(value);
					this.SendPropertyChanging();
					this._DON_HANG_ID = value;
					this.SendPropertyChanged("DON_HANG_ID");
					this.OnDON_HANG_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAN_PHAM_ID", DbType="BigInt")]
		public System.Nullable<long> SAN_PHAM_ID
		{
			get
			{
				return this._SAN_PHAM_ID;
			}
			set
			{
				if ((this._SAN_PHAM_ID != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSAN_PHAM_IDChanging(value);
					this.SendPropertyChanging();
					this._SAN_PHAM_ID = value;
					this.SendPropertyChanged("SAN_PHAM_ID");
					this.OnSAN_PHAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAU", DbType="NVarChar(50)")]
		public string MAU
		{
			get
			{
				return this._MAU;
			}
			set
			{
				if ((this._MAU != value))
				{
					this.OnMAUChanging(value);
					this.SendPropertyChanging();
					this._MAU = value;
					this.SendPropertyChanged("MAU");
					this.OnMAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_LUONG", DbType="Int")]
		public System.Nullable<int> SO_LUONG
		{
			get
			{
				return this._SO_LUONG;
			}
			set
			{
				if ((this._SO_LUONG != value))
				{
					this.OnSO_LUONGChanging(value);
					this.SendPropertyChanging();
					this._SO_LUONG = value;
					this.SendPropertyChanged("SO_LUONG");
					this.OnSO_LUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_SAN_PHAM", DbType="NVarChar(100)")]
		public string TEN_SAN_PHAM
		{
			get
			{
				return this._TEN_SAN_PHAM;
			}
			set
			{
				if ((this._TEN_SAN_PHAM != value))
				{
					this.OnTEN_SAN_PHAMChanging(value);
					this.SendPropertyChanging();
					this._TEN_SAN_PHAM = value;
					this.SendPropertyChanged("TEN_SAN_PHAM");
					this.OnTEN_SAN_PHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH_ANH", DbType="VarChar(200)")]
		public string HINH_ANH
		{
			get
			{
				return this._HINH_ANH;
			}
			set
			{
				if ((this._HINH_ANH != value))
				{
					this.OnHINH_ANHChanging(value);
					this.SendPropertyChanging();
					this._HINH_ANH = value;
					this.SendPropertyChanged("HINH_ANH");
					this.OnHINH_ANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_CHI_TIET_DON_HANG", Storage="_DON_HANG", ThisKey="DON_HANG_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public DON_HANG DON_HANG
		{
			get
			{
				return this._DON_HANG.Entity;
			}
			set
			{
				DON_HANG previousValue = this._DON_HANG.Entity;
				if (((previousValue != value) 
							|| (this._DON_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DON_HANG.Entity = null;
						previousValue.CHI_TIET_DON_HANGs.Remove(this);
					}
					this._DON_HANG.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_DON_HANGs.Add(this);
						this._DON_HANG_ID = value.ID;
					}
					else
					{
						this._DON_HANG_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("DON_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_DON_HANG", Storage="_SAN_PHAM", ThisKey="SAN_PHAM_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.CHI_TIET_DON_HANGs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_DON_HANGs.Add(this);
						this._SAN_PHAM_ID = value.ID;
					}
					else
					{
						this._SAN_PHAM_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONG_TIN_TAI_KHOAN")]
	public partial class THONG_TIN_TAI_KHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TEN_TAI_KHOAN;
		
		private string _TEN;
		
		private string _HO;
		
		private string _SDT;
		
		private string _GIOI_TINH;
		
		private string _DIA_CHI;
		
		private string _PHUONG_XA;
		
		private string _QUAN_HUYEN;
		
		private string _TINH_THANH;
		
		private string _ANH_DAI_DIEN;
		
		private EntityRef<TAI_KHOAN> _TAI_KHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTEN_TAI_KHOANChanging(string value);
    partial void OnTEN_TAI_KHOANChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnHOChanging(string value);
    partial void OnHOChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnGIOI_TINHChanging(string value);
    partial void OnGIOI_TINHChanged();
    partial void OnDIA_CHIChanging(string value);
    partial void OnDIA_CHIChanged();
    partial void OnPHUONG_XAChanging(string value);
    partial void OnPHUONG_XAChanged();
    partial void OnQUAN_HUYENChanging(string value);
    partial void OnQUAN_HUYENChanged();
    partial void OnTINH_THANHChanging(string value);
    partial void OnTINH_THANHChanged();
    partial void OnANH_DAI_DIENChanging(string value);
    partial void OnANH_DAI_DIENChanged();
    #endregion
		
		public THONG_TIN_TAI_KHOAN()
		{
			this._TAI_KHOAN = default(EntityRef<TAI_KHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_TAI_KHOAN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN_TAI_KHOAN
		{
			get
			{
				return this._TEN_TAI_KHOAN;
			}
			set
			{
				if ((this._TEN_TAI_KHOAN != value))
				{
					if (this._TAI_KHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEN_TAI_KHOANChanging(value);
					this.SendPropertyChanging();
					this._TEN_TAI_KHOAN = value;
					this.SendPropertyChanged("TEN_TAI_KHOAN");
					this.OnTEN_TAI_KHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HO", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HO
		{
			get
			{
				return this._HO;
			}
			set
			{
				if ((this._HO != value))
				{
					this.OnHOChanging(value);
					this.SendPropertyChanging();
					this._HO = value;
					this.SendPropertyChanged("HO");
					this.OnHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOI_TINH", DbType="NVarChar(4)")]
		public string GIOI_TINH
		{
			get
			{
				return this._GIOI_TINH;
			}
			set
			{
				if ((this._GIOI_TINH != value))
				{
					this.OnGIOI_TINHChanging(value);
					this.SendPropertyChanging();
					this._GIOI_TINH = value;
					this.SendPropertyChanged("GIOI_TINH");
					this.OnGIOI_TINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIA_CHI", DbType="NVarChar(50)")]
		public string DIA_CHI
		{
			get
			{
				return this._DIA_CHI;
			}
			set
			{
				if ((this._DIA_CHI != value))
				{
					this.OnDIA_CHIChanging(value);
					this.SendPropertyChanging();
					this._DIA_CHI = value;
					this.SendPropertyChanged("DIA_CHI");
					this.OnDIA_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG_XA", DbType="NVarChar(50)")]
		public string PHUONG_XA
		{
			get
			{
				return this._PHUONG_XA;
			}
			set
			{
				if ((this._PHUONG_XA != value))
				{
					this.OnPHUONG_XAChanging(value);
					this.SendPropertyChanging();
					this._PHUONG_XA = value;
					this.SendPropertyChanged("PHUONG_XA");
					this.OnPHUONG_XAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN_HUYEN", DbType="NVarChar(50)")]
		public string QUAN_HUYEN
		{
			get
			{
				return this._QUAN_HUYEN;
			}
			set
			{
				if ((this._QUAN_HUYEN != value))
				{
					this.OnQUAN_HUYENChanging(value);
					this.SendPropertyChanging();
					this._QUAN_HUYEN = value;
					this.SendPropertyChanged("QUAN_HUYEN");
					this.OnQUAN_HUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINH_THANH", DbType="NVarChar(50)")]
		public string TINH_THANH
		{
			get
			{
				return this._TINH_THANH;
			}
			set
			{
				if ((this._TINH_THANH != value))
				{
					this.OnTINH_THANHChanging(value);
					this.SendPropertyChanging();
					this._TINH_THANH = value;
					this.SendPropertyChanged("TINH_THANH");
					this.OnTINH_THANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH_DAI_DIEN", DbType="VarChar(200)")]
		public string ANH_DAI_DIEN
		{
			get
			{
				return this._ANH_DAI_DIEN;
			}
			set
			{
				if ((this._ANH_DAI_DIEN != value))
				{
					this.OnANH_DAI_DIENChanging(value);
					this.SendPropertyChanging();
					this._ANH_DAI_DIEN = value;
					this.SendPropertyChanged("ANH_DAI_DIEN");
					this.OnANH_DAI_DIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_THONG_TIN_TAI_KHOAN", Storage="_TAI_KHOAN", ThisKey="TEN_TAI_KHOAN", OtherKey="TEN_TAI_KHOAN", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TAI_KHOAN TAI_KHOAN
		{
			get
			{
				return this._TAI_KHOAN.Entity;
			}
			set
			{
				TAI_KHOAN previousValue = this._TAI_KHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAI_KHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAI_KHOAN.Entity = null;
						previousValue.THONG_TIN_TAI_KHOANs.Remove(this);
					}
					this._TAI_KHOAN.Entity = value;
					if ((value != null))
					{
						value.THONG_TIN_TAI_KHOANs.Add(this);
						this._TEN_TAI_KHOAN = value.TEN_TAI_KHOAN;
					}
					else
					{
						this._TEN_TAI_KHOAN = default(string);
					}
					this.SendPropertyChanged("TAI_KHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHI_TIET_SAN_PHAM")]
	public partial class CHI_TIET_SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _SAN_PHAM_ID;
		
		private string _TIEU_DE;
		
		private string _NOI_DUNG;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSAN_PHAM_IDChanging(long value);
    partial void OnSAN_PHAM_IDChanged();
    partial void OnTIEU_DEChanging(string value);
    partial void OnTIEU_DEChanged();
    partial void OnNOI_DUNGChanging(string value);
    partial void OnNOI_DUNGChanged();
    #endregion
		
		public CHI_TIET_SAN_PHAM()
		{
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAN_PHAM_ID", DbType="BigInt NOT NULL")]
		public long SAN_PHAM_ID
		{
			get
			{
				return this._SAN_PHAM_ID;
			}
			set
			{
				if ((this._SAN_PHAM_ID != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSAN_PHAM_IDChanging(value);
					this.SendPropertyChanging();
					this._SAN_PHAM_ID = value;
					this.SendPropertyChanged("SAN_PHAM_ID");
					this.OnSAN_PHAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEU_DE", DbType="NVarChar(100)")]
		public string TIEU_DE
		{
			get
			{
				return this._TIEU_DE;
			}
			set
			{
				if ((this._TIEU_DE != value))
				{
					this.OnTIEU_DEChanging(value);
					this.SendPropertyChanging();
					this._TIEU_DE = value;
					this.SendPropertyChanged("TIEU_DE");
					this.OnTIEU_DEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOI_DUNG", DbType="NVarChar(300)")]
		public string NOI_DUNG
		{
			get
			{
				return this._NOI_DUNG;
			}
			set
			{
				if ((this._NOI_DUNG != value))
				{
					this.OnNOI_DUNGChanging(value);
					this.SendPropertyChanging();
					this._NOI_DUNG = value;
					this.SendPropertyChanged("NOI_DUNG");
					this.OnNOI_DUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_SAN_PHAM", Storage="_SAN_PHAM", ThisKey="SAN_PHAM_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.CHI_TIET_SAN_PHAMs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.CHI_TIET_SAN_PHAMs.Add(this);
						this._SAN_PHAM_ID = value.ID;
					}
					else
					{
						this._SAN_PHAM_ID = default(long);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DON_HANG")]
	public partial class DON_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TEN_TAI_KHOAN;
		
		private System.Nullable<System.DateTime> _NGAY_DAT_HANG;
		
		private System.Nullable<int> _TONG_SAN_PHAM;
		
		private System.Nullable<decimal> _TONG_TIEN;
		
		private string _TRANG_THAI;
		
		private System.Nullable<System.DateTime> _NGAY_DUYET;
		
		private System.Nullable<System.DateTime> _NGAY_HUY;
		
		private EntitySet<CHI_TIET_DON_HANG> _CHI_TIET_DON_HANGs;
		
		private EntityRef<THONG_TIN_DON_HANG> _THONG_TIN_DON_HANG;
		
		private EntityRef<TAI_KHOAN> _TAI_KHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTEN_TAI_KHOANChanging(string value);
    partial void OnTEN_TAI_KHOANChanged();
    partial void OnNGAY_DAT_HANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAY_DAT_HANGChanged();
    partial void OnTONG_SAN_PHAMChanging(System.Nullable<int> value);
    partial void OnTONG_SAN_PHAMChanged();
    partial void OnTONG_TIENChanging(System.Nullable<decimal> value);
    partial void OnTONG_TIENChanged();
    partial void OnTRANG_THAIChanging(string value);
    partial void OnTRANG_THAIChanged();
    partial void OnNGAY_DUYETChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAY_DUYETChanged();
    partial void OnNGAY_HUYChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAY_HUYChanged();
    #endregion
		
		public DON_HANG()
		{
			this._CHI_TIET_DON_HANGs = new EntitySet<CHI_TIET_DON_HANG>(new Action<CHI_TIET_DON_HANG>(this.attach_CHI_TIET_DON_HANGs), new Action<CHI_TIET_DON_HANG>(this.detach_CHI_TIET_DON_HANGs));
			this._THONG_TIN_DON_HANG = default(EntityRef<THONG_TIN_DON_HANG>);
			this._TAI_KHOAN = default(EntityRef<TAI_KHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_TAI_KHOAN", DbType="VarChar(50)")]
		public string TEN_TAI_KHOAN
		{
			get
			{
				return this._TEN_TAI_KHOAN;
			}
			set
			{
				if ((this._TEN_TAI_KHOAN != value))
				{
					if (this._TAI_KHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEN_TAI_KHOANChanging(value);
					this.SendPropertyChanging();
					this._TEN_TAI_KHOAN = value;
					this.SendPropertyChanged("TEN_TAI_KHOAN");
					this.OnTEN_TAI_KHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_DAT_HANG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY_DAT_HANG
		{
			get
			{
				return this._NGAY_DAT_HANG;
			}
			set
			{
				if ((this._NGAY_DAT_HANG != value))
				{
					this.OnNGAY_DAT_HANGChanging(value);
					this.SendPropertyChanging();
					this._NGAY_DAT_HANG = value;
					this.SendPropertyChanged("NGAY_DAT_HANG");
					this.OnNGAY_DAT_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_SAN_PHAM", DbType="Int")]
		public System.Nullable<int> TONG_SAN_PHAM
		{
			get
			{
				return this._TONG_SAN_PHAM;
			}
			set
			{
				if ((this._TONG_SAN_PHAM != value))
				{
					this.OnTONG_SAN_PHAMChanging(value);
					this.SendPropertyChanging();
					this._TONG_SAN_PHAM = value;
					this.SendPropertyChanged("TONG_SAN_PHAM");
					this.OnTONG_SAN_PHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_TIEN", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> TONG_TIEN
		{
			get
			{
				return this._TONG_TIEN;
			}
			set
			{
				if ((this._TONG_TIEN != value))
				{
					this.OnTONG_TIENChanging(value);
					this.SendPropertyChanging();
					this._TONG_TIEN = value;
					this.SendPropertyChanged("TONG_TIEN");
					this.OnTONG_TIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANG_THAI", DbType="NVarChar(50)")]
		public string TRANG_THAI
		{
			get
			{
				return this._TRANG_THAI;
			}
			set
			{
				if ((this._TRANG_THAI != value))
				{
					this.OnTRANG_THAIChanging(value);
					this.SendPropertyChanging();
					this._TRANG_THAI = value;
					this.SendPropertyChanged("TRANG_THAI");
					this.OnTRANG_THAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_DUYET", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY_DUYET
		{
			get
			{
				return this._NGAY_DUYET;
			}
			set
			{
				if ((this._NGAY_DUYET != value))
				{
					this.OnNGAY_DUYETChanging(value);
					this.SendPropertyChanging();
					this._NGAY_DUYET = value;
					this.SendPropertyChanged("NGAY_DUYET");
					this.OnNGAY_DUYETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_HUY", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY_HUY
		{
			get
			{
				return this._NGAY_HUY;
			}
			set
			{
				if ((this._NGAY_HUY != value))
				{
					this.OnNGAY_HUYChanging(value);
					this.SendPropertyChanging();
					this._NGAY_HUY = value;
					this.SendPropertyChanged("NGAY_HUY");
					this.OnNGAY_HUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_CHI_TIET_DON_HANG", Storage="_CHI_TIET_DON_HANGs", ThisKey="ID", OtherKey="DON_HANG_ID")]
		public EntitySet<CHI_TIET_DON_HANG> CHI_TIET_DON_HANGs
		{
			get
			{
				return this._CHI_TIET_DON_HANGs;
			}
			set
			{
				this._CHI_TIET_DON_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_THONG_TIN_DON_HANG", Storage="_THONG_TIN_DON_HANG", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public THONG_TIN_DON_HANG THONG_TIN_DON_HANG
		{
			get
			{
				return this._THONG_TIN_DON_HANG.Entity;
			}
			set
			{
				THONG_TIN_DON_HANG previousValue = this._THONG_TIN_DON_HANG.Entity;
				if (((previousValue != value) 
							|| (this._THONG_TIN_DON_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONG_TIN_DON_HANG.Entity = null;
						previousValue.DON_HANG = null;
					}
					this._THONG_TIN_DON_HANG.Entity = value;
					if ((value != null))
					{
						value.DON_HANG = this;
					}
					this.SendPropertyChanged("THONG_TIN_DON_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_DON_HANG", Storage="_TAI_KHOAN", ThisKey="TEN_TAI_KHOAN", OtherKey="TEN_TAI_KHOAN", IsForeignKey=true, DeleteRule="SET NULL")]
		public TAI_KHOAN TAI_KHOAN
		{
			get
			{
				return this._TAI_KHOAN.Entity;
			}
			set
			{
				TAI_KHOAN previousValue = this._TAI_KHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAI_KHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAI_KHOAN.Entity = null;
						previousValue.DON_HANGs.Remove(this);
					}
					this._TAI_KHOAN.Entity = value;
					if ((value != null))
					{
						value.DON_HANGs.Add(this);
						this._TEN_TAI_KHOAN = value.TEN_TAI_KHOAN;
					}
					else
					{
						this._TEN_TAI_KHOAN = default(string);
					}
					this.SendPropertyChanged("TAI_KHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHI_TIET_DON_HANGs(CHI_TIET_DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_HANG = this;
		}
		
		private void detach_CHI_TIET_DON_HANGs(CHI_TIET_DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIO_HANG")]
	public partial class GIO_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TEN_TAI_KHOAN;
		
		private long _SAN_PHAM_ID;
		
		private System.Nullable<int> _SO_LUONG;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
		private EntityRef<TAI_KHOAN> _TAI_KHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTEN_TAI_KHOANChanging(string value);
    partial void OnTEN_TAI_KHOANChanged();
    partial void OnSAN_PHAM_IDChanging(long value);
    partial void OnSAN_PHAM_IDChanged();
    partial void OnSO_LUONGChanging(System.Nullable<int> value);
    partial void OnSO_LUONGChanged();
    #endregion
		
		public GIO_HANG()
		{
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			this._TAI_KHOAN = default(EntityRef<TAI_KHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_TAI_KHOAN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN_TAI_KHOAN
		{
			get
			{
				return this._TEN_TAI_KHOAN;
			}
			set
			{
				if ((this._TEN_TAI_KHOAN != value))
				{
					if (this._TAI_KHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEN_TAI_KHOANChanging(value);
					this.SendPropertyChanging();
					this._TEN_TAI_KHOAN = value;
					this.SendPropertyChanged("TEN_TAI_KHOAN");
					this.OnTEN_TAI_KHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAN_PHAM_ID", DbType="BigInt NOT NULL")]
		public long SAN_PHAM_ID
		{
			get
			{
				return this._SAN_PHAM_ID;
			}
			set
			{
				if ((this._SAN_PHAM_ID != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSAN_PHAM_IDChanging(value);
					this.SendPropertyChanging();
					this._SAN_PHAM_ID = value;
					this.SendPropertyChanged("SAN_PHAM_ID");
					this.OnSAN_PHAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_LUONG", DbType="Int")]
		public System.Nullable<int> SO_LUONG
		{
			get
			{
				return this._SO_LUONG;
			}
			set
			{
				if ((this._SO_LUONG != value))
				{
					this.OnSO_LUONGChanging(value);
					this.SendPropertyChanging();
					this._SO_LUONG = value;
					this.SendPropertyChanged("SO_LUONG");
					this.OnSO_LUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_GIO_HANG", Storage="_SAN_PHAM", ThisKey="SAN_PHAM_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.GIO_HANGs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.GIO_HANGs.Add(this);
						this._SAN_PHAM_ID = value.ID;
					}
					else
					{
						this._SAN_PHAM_ID = default(long);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_GIO_HANG", Storage="_TAI_KHOAN", ThisKey="TEN_TAI_KHOAN", OtherKey="TEN_TAI_KHOAN", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TAI_KHOAN TAI_KHOAN
		{
			get
			{
				return this._TAI_KHOAN.Entity;
			}
			set
			{
				TAI_KHOAN previousValue = this._TAI_KHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAI_KHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAI_KHOAN.Entity = null;
						previousValue.GIO_HANGs.Remove(this);
					}
					this._TAI_KHOAN.Entity = value;
					if ((value != null))
					{
						value.GIO_HANGs.Add(this);
						this._TEN_TAI_KHOAN = value.TEN_TAI_KHOAN;
					}
					else
					{
						this._TEN_TAI_KHOAN = default(string);
					}
					this.SendPropertyChanged("TAI_KHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINH_ANH")]
	public partial class HINH_ANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _SAN_PHAM_ID;
		
		private string _TEN_FILE;
		
		private string _THU_MUC;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSAN_PHAM_IDChanging(System.Nullable<long> value);
    partial void OnSAN_PHAM_IDChanged();
    partial void OnTEN_FILEChanging(string value);
    partial void OnTEN_FILEChanged();
    partial void OnTHU_MUCChanging(string value);
    partial void OnTHU_MUCChanged();
    #endregion
		
		public HINH_ANH()
		{
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAN_PHAM_ID", DbType="BigInt")]
		public System.Nullable<long> SAN_PHAM_ID
		{
			get
			{
				return this._SAN_PHAM_ID;
			}
			set
			{
				if ((this._SAN_PHAM_ID != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSAN_PHAM_IDChanging(value);
					this.SendPropertyChanging();
					this._SAN_PHAM_ID = value;
					this.SendPropertyChanged("SAN_PHAM_ID");
					this.OnSAN_PHAM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_FILE", DbType="VarChar(555) NOT NULL", CanBeNull=false)]
		public string TEN_FILE
		{
			get
			{
				return this._TEN_FILE;
			}
			set
			{
				if ((this._TEN_FILE != value))
				{
					this.OnTEN_FILEChanging(value);
					this.SendPropertyChanging();
					this._TEN_FILE = value;
					this.SendPropertyChanged("TEN_FILE");
					this.OnTEN_FILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU_MUC", DbType="VarChar(50)")]
		public string THU_MUC
		{
			get
			{
				return this._THU_MUC;
			}
			set
			{
				if ((this._THU_MUC != value))
				{
					this.OnTHU_MUCChanging(value);
					this.SendPropertyChanging();
					this._THU_MUC = value;
					this.SendPropertyChanged("THU_MUC");
					this.OnTHU_MUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_HINH_ANH", Storage="_SAN_PHAM", ThisKey="SAN_PHAM_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.HINH_ANHs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.HINH_ANHs.Add(this);
						this._SAN_PHAM_ID = value.ID;
					}
					else
					{
						this._SAN_PHAM_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_SAN_PHAM")]
	public partial class LOAI_SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TEN;
		
		private EntitySet<SAN_PHAM> _SAN_PHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    #endregion
		
		public LOAI_SAN_PHAM()
		{
			this._SAN_PHAMs = new EntitySet<SAN_PHAM>(new Action<SAN_PHAM>(this.attach_SAN_PHAMs), new Action<SAN_PHAM>(this.detach_SAN_PHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SAN_PHAM_SAN_PHAM", Storage="_SAN_PHAMs", ThisKey="ID", OtherKey="LOAI_SP_ID")]
		public EntitySet<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this._SAN_PHAMs;
			}
			set
			{
				this._SAN_PHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_SAN_PHAM = this;
		}
		
		private void detach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_SAN_PHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAN_PHAM")]
	public partial class SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TEN;
		
		private System.Nullable<decimal> _GIA;
		
		private string _MAU;
		
		private string _MA_PHAN_LOAI;
		
		private System.Nullable<int> _SO_LUONG;
		
		private string _TRANG_THAI;
		
		private System.Nullable<long> _LOAI_SP_ID;
		
		private EntitySet<CHI_TIET_DON_HANG> _CHI_TIET_DON_HANGs;
		
		private EntitySet<CHI_TIET_SAN_PHAM> _CHI_TIET_SAN_PHAMs;
		
		private EntitySet<GIO_HANG> _GIO_HANGs;
		
		private EntitySet<HINH_ANH> _HINH_ANHs;
		
		private EntityRef<LOAI_SAN_PHAM> _LOAI_SAN_PHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnGIAChanging(System.Nullable<decimal> value);
    partial void OnGIAChanged();
    partial void OnMAUChanging(string value);
    partial void OnMAUChanged();
    partial void OnMA_PHAN_LOAIChanging(string value);
    partial void OnMA_PHAN_LOAIChanged();
    partial void OnSO_LUONGChanging(System.Nullable<int> value);
    partial void OnSO_LUONGChanged();
    partial void OnTRANG_THAIChanging(string value);
    partial void OnTRANG_THAIChanged();
    partial void OnLOAI_SP_IDChanging(System.Nullable<long> value);
    partial void OnLOAI_SP_IDChanged();
    #endregion
		
		public SAN_PHAM()
		{
			this._CHI_TIET_DON_HANGs = new EntitySet<CHI_TIET_DON_HANG>(new Action<CHI_TIET_DON_HANG>(this.attach_CHI_TIET_DON_HANGs), new Action<CHI_TIET_DON_HANG>(this.detach_CHI_TIET_DON_HANGs));
			this._CHI_TIET_SAN_PHAMs = new EntitySet<CHI_TIET_SAN_PHAM>(new Action<CHI_TIET_SAN_PHAM>(this.attach_CHI_TIET_SAN_PHAMs), new Action<CHI_TIET_SAN_PHAM>(this.detach_CHI_TIET_SAN_PHAMs));
			this._GIO_HANGs = new EntitySet<GIO_HANG>(new Action<GIO_HANG>(this.attach_GIO_HANGs), new Action<GIO_HANG>(this.detach_GIO_HANGs));
			this._HINH_ANHs = new EntitySet<HINH_ANH>(new Action<HINH_ANH>(this.attach_HINH_ANHs), new Action<HINH_ANH>(this.detach_HINH_ANHs));
			this._LOAI_SAN_PHAM = default(EntityRef<LOAI_SAN_PHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAU", DbType="NVarChar(50)")]
		public string MAU
		{
			get
			{
				return this._MAU;
			}
			set
			{
				if ((this._MAU != value))
				{
					this.OnMAUChanging(value);
					this.SendPropertyChanging();
					this._MAU = value;
					this.SendPropertyChanged("MAU");
					this.OnMAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA_PHAN_LOAI", DbType="VarChar(50)")]
		public string MA_PHAN_LOAI
		{
			get
			{
				return this._MA_PHAN_LOAI;
			}
			set
			{
				if ((this._MA_PHAN_LOAI != value))
				{
					this.OnMA_PHAN_LOAIChanging(value);
					this.SendPropertyChanging();
					this._MA_PHAN_LOAI = value;
					this.SendPropertyChanged("MA_PHAN_LOAI");
					this.OnMA_PHAN_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_LUONG", DbType="Int")]
		public System.Nullable<int> SO_LUONG
		{
			get
			{
				return this._SO_LUONG;
			}
			set
			{
				if ((this._SO_LUONG != value))
				{
					this.OnSO_LUONGChanging(value);
					this.SendPropertyChanging();
					this._SO_LUONG = value;
					this.SendPropertyChanged("SO_LUONG");
					this.OnSO_LUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANG_THAI", DbType="NVarChar(50)")]
		public string TRANG_THAI
		{
			get
			{
				return this._TRANG_THAI;
			}
			set
			{
				if ((this._TRANG_THAI != value))
				{
					this.OnTRANG_THAIChanging(value);
					this.SendPropertyChanging();
					this._TRANG_THAI = value;
					this.SendPropertyChanged("TRANG_THAI");
					this.OnTRANG_THAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAI_SP_ID", DbType="BigInt")]
		public System.Nullable<long> LOAI_SP_ID
		{
			get
			{
				return this._LOAI_SP_ID;
			}
			set
			{
				if ((this._LOAI_SP_ID != value))
				{
					if (this._LOAI_SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOAI_SP_IDChanging(value);
					this.SendPropertyChanging();
					this._LOAI_SP_ID = value;
					this.SendPropertyChanged("LOAI_SP_ID");
					this.OnLOAI_SP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_DON_HANG", Storage="_CHI_TIET_DON_HANGs", ThisKey="ID", OtherKey="SAN_PHAM_ID")]
		public EntitySet<CHI_TIET_DON_HANG> CHI_TIET_DON_HANGs
		{
			get
			{
				return this._CHI_TIET_DON_HANGs;
			}
			set
			{
				this._CHI_TIET_DON_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CHI_TIET_SAN_PHAM", Storage="_CHI_TIET_SAN_PHAMs", ThisKey="ID", OtherKey="SAN_PHAM_ID")]
		public EntitySet<CHI_TIET_SAN_PHAM> CHI_TIET_SAN_PHAMs
		{
			get
			{
				return this._CHI_TIET_SAN_PHAMs;
			}
			set
			{
				this._CHI_TIET_SAN_PHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_GIO_HANG", Storage="_GIO_HANGs", ThisKey="ID", OtherKey="SAN_PHAM_ID")]
		public EntitySet<GIO_HANG> GIO_HANGs
		{
			get
			{
				return this._GIO_HANGs;
			}
			set
			{
				this._GIO_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_HINH_ANH", Storage="_HINH_ANHs", ThisKey="ID", OtherKey="SAN_PHAM_ID")]
		public EntitySet<HINH_ANH> HINH_ANHs
		{
			get
			{
				return this._HINH_ANHs;
			}
			set
			{
				this._HINH_ANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SAN_PHAM_SAN_PHAM", Storage="_LOAI_SAN_PHAM", ThisKey="LOAI_SP_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public LOAI_SAN_PHAM LOAI_SAN_PHAM
		{
			get
			{
				return this._LOAI_SAN_PHAM.Entity;
			}
			set
			{
				LOAI_SAN_PHAM previousValue = this._LOAI_SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_SAN_PHAM.Entity = null;
						previousValue.SAN_PHAMs.Remove(this);
					}
					this._LOAI_SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.SAN_PHAMs.Add(this);
						this._LOAI_SP_ID = value.ID;
					}
					else
					{
						this._LOAI_SP_ID = default(Nullable<long>);
					}
					this.SendPropertyChanged("LOAI_SAN_PHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHI_TIET_DON_HANGs(CHI_TIET_DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_CHI_TIET_DON_HANGs(CHI_TIET_DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
		
		private void attach_CHI_TIET_SAN_PHAMs(CHI_TIET_SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_CHI_TIET_SAN_PHAMs(CHI_TIET_SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
		
		private void attach_GIO_HANGs(GIO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_GIO_HANGs(GIO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
		
		private void attach_HINH_ANHs(HINH_ANH entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_HINH_ANHs(HINH_ANH entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAI_KHOAN")]
	public partial class TAI_KHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TEN_TAI_KHOAN;
		
		private string _MAT_KHAU;
		
		private string _QUYEN_HAN;
		
		private string _EMAIL;
		
		private EntitySet<THONG_TIN_TAI_KHOAN> _THONG_TIN_TAI_KHOANs;
		
		private EntitySet<DON_HANG> _DON_HANGs;
		
		private EntitySet<GIO_HANG> _GIO_HANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEN_TAI_KHOANChanging(string value);
    partial void OnTEN_TAI_KHOANChanged();
    partial void OnMAT_KHAUChanging(string value);
    partial void OnMAT_KHAUChanged();
    partial void OnQUYEN_HANChanging(string value);
    partial void OnQUYEN_HANChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public TAI_KHOAN()
		{
			this._THONG_TIN_TAI_KHOANs = new EntitySet<THONG_TIN_TAI_KHOAN>(new Action<THONG_TIN_TAI_KHOAN>(this.attach_THONG_TIN_TAI_KHOANs), new Action<THONG_TIN_TAI_KHOAN>(this.detach_THONG_TIN_TAI_KHOANs));
			this._DON_HANGs = new EntitySet<DON_HANG>(new Action<DON_HANG>(this.attach_DON_HANGs), new Action<DON_HANG>(this.detach_DON_HANGs));
			this._GIO_HANGs = new EntitySet<GIO_HANG>(new Action<GIO_HANG>(this.attach_GIO_HANGs), new Action<GIO_HANG>(this.detach_GIO_HANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_TAI_KHOAN", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TEN_TAI_KHOAN
		{
			get
			{
				return this._TEN_TAI_KHOAN;
			}
			set
			{
				if ((this._TEN_TAI_KHOAN != value))
				{
					this.OnTEN_TAI_KHOANChanging(value);
					this.SendPropertyChanging();
					this._TEN_TAI_KHOAN = value;
					this.SendPropertyChanged("TEN_TAI_KHOAN");
					this.OnTEN_TAI_KHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAT_KHAU", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MAT_KHAU
		{
			get
			{
				return this._MAT_KHAU;
			}
			set
			{
				if ((this._MAT_KHAU != value))
				{
					this.OnMAT_KHAUChanging(value);
					this.SendPropertyChanging();
					this._MAT_KHAU = value;
					this.SendPropertyChanged("MAT_KHAU");
					this.OnMAT_KHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN_HAN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string QUYEN_HAN
		{
			get
			{
				return this._QUYEN_HAN;
			}
			set
			{
				if ((this._QUYEN_HAN != value))
				{
					this.OnQUYEN_HANChanging(value);
					this.SendPropertyChanging();
					this._QUYEN_HAN = value;
					this.SendPropertyChanged("QUYEN_HAN");
					this.OnQUYEN_HANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_THONG_TIN_TAI_KHOAN", Storage="_THONG_TIN_TAI_KHOANs", ThisKey="TEN_TAI_KHOAN", OtherKey="TEN_TAI_KHOAN")]
		public EntitySet<THONG_TIN_TAI_KHOAN> THONG_TIN_TAI_KHOANs
		{
			get
			{
				return this._THONG_TIN_TAI_KHOANs;
			}
			set
			{
				this._THONG_TIN_TAI_KHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_DON_HANG", Storage="_DON_HANGs", ThisKey="TEN_TAI_KHOAN", OtherKey="TEN_TAI_KHOAN")]
		public EntitySet<DON_HANG> DON_HANGs
		{
			get
			{
				return this._DON_HANGs;
			}
			set
			{
				this._DON_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_GIO_HANG", Storage="_GIO_HANGs", ThisKey="TEN_TAI_KHOAN", OtherKey="TEN_TAI_KHOAN")]
		public EntitySet<GIO_HANG> GIO_HANGs
		{
			get
			{
				return this._GIO_HANGs;
			}
			set
			{
				this._GIO_HANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THONG_TIN_TAI_KHOANs(THONG_TIN_TAI_KHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = this;
		}
		
		private void detach_THONG_TIN_TAI_KHOANs(THONG_TIN_TAI_KHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = null;
		}
		
		private void attach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = this;
		}
		
		private void detach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = null;
		}
		
		private void attach_GIO_HANGs(GIO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = this;
		}
		
		private void detach_GIO_HANGs(GIO_HANG entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONG_TIN_DON_HANG")]
	public partial class THONG_TIN_DON_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TEN;
		
		private string _HO;
		
		private string _SDT;
		
		private string _GIOI_TINH;
		
		private string _DIA_CHI;
		
		private string _PHUONG_XA;
		
		private string _QUAN_HUYEN;
		
		private string _TINH_THANH;
		
		private EntityRef<DON_HANG> _DON_HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnHOChanging(string value);
    partial void OnHOChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnGIOI_TINHChanging(string value);
    partial void OnGIOI_TINHChanged();
    partial void OnDIA_CHIChanging(string value);
    partial void OnDIA_CHIChanged();
    partial void OnPHUONG_XAChanging(string value);
    partial void OnPHUONG_XAChanged();
    partial void OnQUAN_HUYENChanging(string value);
    partial void OnQUAN_HUYENChanged();
    partial void OnTINH_THANHChanging(string value);
    partial void OnTINH_THANHChanged();
    #endregion
		
		public THONG_TIN_DON_HANG()
		{
			this._DON_HANG = default(EntityRef<DON_HANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._DON_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HO", DbType="NVarChar(50)")]
		public string HO
		{
			get
			{
				return this._HO;
			}
			set
			{
				if ((this._HO != value))
				{
					this.OnHOChanging(value);
					this.SendPropertyChanging();
					this._HO = value;
					this.SendPropertyChanged("HO");
					this.OnHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOI_TINH", DbType="NVarChar(4)")]
		public string GIOI_TINH
		{
			get
			{
				return this._GIOI_TINH;
			}
			set
			{
				if ((this._GIOI_TINH != value))
				{
					this.OnGIOI_TINHChanging(value);
					this.SendPropertyChanging();
					this._GIOI_TINH = value;
					this.SendPropertyChanged("GIOI_TINH");
					this.OnGIOI_TINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIA_CHI", DbType="NVarChar(50)")]
		public string DIA_CHI
		{
			get
			{
				return this._DIA_CHI;
			}
			set
			{
				if ((this._DIA_CHI != value))
				{
					this.OnDIA_CHIChanging(value);
					this.SendPropertyChanging();
					this._DIA_CHI = value;
					this.SendPropertyChanged("DIA_CHI");
					this.OnDIA_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG_XA", DbType="NVarChar(50)")]
		public string PHUONG_XA
		{
			get
			{
				return this._PHUONG_XA;
			}
			set
			{
				if ((this._PHUONG_XA != value))
				{
					this.OnPHUONG_XAChanging(value);
					this.SendPropertyChanging();
					this._PHUONG_XA = value;
					this.SendPropertyChanged("PHUONG_XA");
					this.OnPHUONG_XAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN_HUYEN", DbType="NVarChar(50)")]
		public string QUAN_HUYEN
		{
			get
			{
				return this._QUAN_HUYEN;
			}
			set
			{
				if ((this._QUAN_HUYEN != value))
				{
					this.OnQUAN_HUYENChanging(value);
					this.SendPropertyChanging();
					this._QUAN_HUYEN = value;
					this.SendPropertyChanged("QUAN_HUYEN");
					this.OnQUAN_HUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINH_THANH", DbType="NVarChar(50)")]
		public string TINH_THANH
		{
			get
			{
				return this._TINH_THANH;
			}
			set
			{
				if ((this._TINH_THANH != value))
				{
					this.OnTINH_THANHChanging(value);
					this.SendPropertyChanging();
					this._TINH_THANH = value;
					this.SendPropertyChanged("TINH_THANH");
					this.OnTINH_THANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_THONG_TIN_DON_HANG", Storage="_DON_HANG", ThisKey="ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DON_HANG DON_HANG
		{
			get
			{
				return this._DON_HANG.Entity;
			}
			set
			{
				DON_HANG previousValue = this._DON_HANG.Entity;
				if (((previousValue != value) 
							|| (this._DON_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DON_HANG.Entity = null;
						previousValue.THONG_TIN_DON_HANG = null;
					}
					this._DON_HANG.Entity = value;
					if ((value != null))
					{
						value.THONG_TIN_DON_HANG = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(long);
					}
					this.SendPropertyChanged("DON_HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
